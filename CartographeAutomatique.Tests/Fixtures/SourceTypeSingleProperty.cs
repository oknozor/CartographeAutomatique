namespace CartographeAutomatique.Tests;

public class SourceTypeSingleProperty : IFixture
{
    private const string Source =
        //language=csharp
        """
        namespace TestNamespace;

        public class A
        {
        
            public string C { get; set; }
        }

        [CartographeAutomatique.MapTo(typeof(TestNamespace.A))]
        public class B
        {
        
            public C C { get; set; }
        }

        public class C
        {
        
            public string Inner { get; set; }
            
            public C (string inner) {
                this.Inner = inner;
            }
        }
        """;

    private const string Expected =
        //language=csharp
        """
        // <auto-generated/>
        namespace TestNamespace;

        public static partial class BMappingExtensions
        {
            public static TestNamespace.A MapToA(this TestNamespace.B source) =>
               	new()
        		{
        			C = source.C.Inner
        		};
        }
        """;

    public SourceGenerationAssertion GetAssertion() =>
        new(Source, [new SourceGenerationOutput("TestNamespace_BToTestNamespace_A", Expected)]);

}