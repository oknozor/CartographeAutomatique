namespace CartographeAutomatique.Tests;

public class ListToArrayMapping : IFixture
{
    private const string Source =
        //language=csharp
        """
            using System.Collections.Generic;
            using CartographeAutomatique;

            namespace TestNamespace;

            [MapTo(typeof(B))]
            public class A
            {
                public List<string> Names { get; set; }
            }

            public class B
            {
                public string[] Names { get; set; }
            }
            """;

    private const string ExpectedMapping =
        //language=csharp
        """
            // <auto-generated/>
            namespace TestNamespace;

            public static partial class AMappingExtensions
            {
                public static TestNamespace.B MapToB(this TestNamespace.A source) =>
                   	new()
            		{
            			Names = source.Names.Select(t => t).ToArray()
            		};
            }
            """;

    public SourceGenerationAssertion GetAssertion() =>
        new(Source, [new SourceGenerationOutput("AToB", ExpectedMapping)]);
}
