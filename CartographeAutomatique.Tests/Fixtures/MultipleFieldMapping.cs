namespace CartographeAutomatique.Tests;

public class MultipleFieldMapping : IFixture
{
    private const string Source =
        //language=csharp
        """
            namespace TestNamespace;
            using CartographeAutomatique;

            [MapTo(typeof(Truck))]
            [MapTo(typeof(Bike))]
            internal record Vehicle(
                [Mapping(TargetType = typeof(Truck), TargetField = "TruckColor")]
                [Mapping(TargetType = typeof(Bike), TargetField = "BikeColor")]
                string Color,
                string Brand
            );

            internal class Truck
            {
                public string TruckColor { get; set; }
                public string Brand { get; set; }
            };

            internal class Bike
            {
                public string BikeColor { get; set; }
                public string Brand { get; set; }
            };
            """;

    private const string TruckMapping =
        //language=csharp
        """
            // <auto-generated/>
            namespace TestNamespace;

            public static partial class VehicleMappingExtensions
            {
                public static TestNamespace.Truck MapToTruck(this TestNamespace.Vehicle source) =>
                   	new()
            		{
            			TruckColor = source.Color,
            			Brand = source.Brand
            		};
            }
            """;

    private const string BikeMapping =
        //language=csharp
        """
            // <auto-generated/>
            namespace TestNamespace;

            public static partial class VehicleMappingExtensions
            {
                public static TestNamespace.Bike MapToBike(this TestNamespace.Vehicle source) =>
                   	new()
            		{
            			BikeColor = source.Color,
            			Brand = source.Brand
            		};
            }
            """;

    public SourceGenerationAssertion GetAssertion() =>
        new(
            Source,
            [
                new("TestNamespace_VehicleToTestNamespace_Truck", TruckMapping),
                new("TestNamespace_VehicleToTestNamespace_Bike", BikeMapping)
            ]
        );
}
