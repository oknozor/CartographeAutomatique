namespace CartographeAutomatique.Tests;

public class SimpleFromClassMapping : IFixture
{
    private const string Source =
        //language=csharp
        """
        namespace TestNamespace;

        [Generators.MapFrom(typeof(Point)]
        public partial class Vector3
        {
        
            public float X { get; set; }
            public float Y { get; set; }
            public float Z { get; set; }
        }

        public partial class Point
        {
            public float X { get; set; }
            public float Y { get; set; }
            public float Z { get; set; }
        };
        """;

    private const string Expected =
        //language=csharp
        """
        // <auto-generated/>
        namespace TestNamespace;

        public static partial class PointMappingExtensions
        {
            public static TestNamespace.Vector3 MapToVector3(this Point source) =>
               	new()
        		{
        			X = source.X,
        			Y = source.Y,
        			Z = source.Z
        		};
        }
        """;

    public SourceGenerationAssertion GetAssertion() =>
        new(Source, [
            new SourceGenerationOutput("PointToVector3", Expected),
        ]);

}