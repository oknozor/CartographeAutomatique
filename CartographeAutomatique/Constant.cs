namespace CartographeAutomatique;

internal static class Constant
{
    internal const string Namespace = "Generators";
    internal const string AttributeName = "MapToAttribute";
    internal const string AttributeSourceCode =
        //language=csharp
        $$"""
          #nullable enable
          // <auto-generated/>
          namespace {{Namespace}}
          {
              [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple = true)]
              public class MapToAttribute : System.Attribute
              {
                  public MapToAttribute(System.Type targetClassName, 
                      bool Exhaustive = true, 
                      MappingStrategy MappingStrategy = MappingStrategy.Setter)
                  {
                      TargetClassName = targetClassName;
                      this.Exhaustive = Exhaustive;
                      this.MappingStrategy = MappingStrategy;
                  }
          
                  public System.Type TargetClassName { get; }
                  public bool Exhaustive { get; set; }
                  public MappingStrategy MappingStrategy  { get; set; }
              }
          
              [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Parameter, AllowMultiple = true)]
              public class TargetMappingAttribute : System.Attribute
              {
                  public TargetMappingAttribute() {}
                  public string TargetField { get; set;} = "";
                  public System.Type? TargetType { get; set;} = null;
              }
              
              public enum MappingStrategy
              {
                  Setter,
                  Constructor
              }
          }
          """;
}